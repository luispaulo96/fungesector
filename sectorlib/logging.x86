proc logger_string
    push bp
    mov bp, sp

    mov dx, 0x00e9
    mov si, [bp + 4]

.next_char:
    mov al, [si]

    cmp al, NUL
    je .finish

    outsb

    jmp .next_char

.finish:
    pop bp
    ret 0x02
endp

proc logger_char
    push bp
    mov bp, sp

    mov dx, 0x00e9
    mov ax, [bp + 4]

    out dx, al

.finish:
    pop bp
    ret 0x02
endp

proc logger_hex
    push bp
    mov bp, sp

    push ax

    mov cx, [bp + 4]
    mov dx, 0x00e9
    mov ah, 0x04

.print_digit:
    rol cx, 4
    mov al, cl
    and al, 0x0f
    add al, '0'
    cmp al, '9'
    jbe .ok
    add al, 7

.ok:
    out dx, al

    dec ah
    jnz .print_digit

.print_space:
    mov al, SPACE_KEY
    out dx, al

.finish:
    pop ax

    pop bp
    ret 0x02
endp
